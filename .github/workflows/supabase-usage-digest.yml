name: Supabase Usage Digest (Gmail)

on:
  schedule:
    - cron: "0 3 * * *" # 03:00 UTC = 09:30 MMT
  workflow_dispatch:

jobs:
  digest:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      DB_FREE_MB: ${{ secrets.DB_FREE_MB }}
      ST_FREE_MB: ${{ secrets.ST_FREE_MB }}
      DAILY_EGRESS_MB_LIMIT: ${{ secrets.DAILY_EGRESS_MB_LIMIT }}
      GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
      GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
      GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
      GMAIL_FROM: ${{ secrets.GMAIL_FROM }}
      GMAIL_TO: ${{ secrets.GMAIL_TO }}
    steps:
      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: (Optional) Insert 1 snapshot/day
        run: |
          curl -sS -X POST \
            -H "apikey: $SERVICE_ROLE_KEY" -H "Authorization: Bearer $SERVICE_ROLE_KEY" \
            -H "Content-Type: application/json" \
            "$SUPABASE_URL/rest/v1/rpc/take_usage_snapshot" >/dev/null || true

      - name: Fetch DB/Storage (MB)
        id: fetch
        run: |
          DB=$(curl -sS -X POST \
            -H "apikey: $SERVICE_ROLE_KEY" -H "Authorization: Bearer $SERVICE_ROLE_KEY" \
            -H "Content-Type: application/json" \
            "$SUPABASE_URL/rest/v1/rpc/get_db_size_mb" | jq -r '.')
          ST=$(curl -sS -X POST \
            -H "apikey: $SERVICE_ROLE_KEY" -H "Authorization: Bearer $SERVICE_ROLE_KEY" \
            -H "Content-Type: application/json" \
            "$SUPABASE_URL/rest/v1/rpc/get_storage_total_mb" | jq -r '.')
          echo "db_mb=$DB" >> "$GITHUB_OUTPUT"
          echo "st_mb=$ST" >> "$GITHUB_OUTPUT"

      - name: Try fetch today's Egress (MB)
        id: egress
        run: |
          DAY=$(date -u +%F)
          RES=$(curl -sS \
            -H "apikey: $SERVICE_ROLE_KEY" -H "Authorization: Bearer $SERVICE_ROLE_KEY" \
            "$SUPABASE_URL/rest/v1/egress_daily_totals?day=eq.$DAY")
          BYTES=$(echo "$RES" | jq -r 'if type=="array" and length>0 then .[0].bytes else 0 end' 2>/dev/null || echo 0)
          MB=$(awk "BEGIN {printf \"%.1f\", ($BYTES/1024/1024)}")
          echo "egress_mb=$MB" >> "$GITHUB_OUTPUT"

      - name: Send Gmail digest
        env:
          DB: ${{ steps.fetch.outputs.db_mb }}
          ST: ${{ steps.fetch.outputs.st_mb }}
          EGRESS_MB: ${{ steps.egress.outputs.egress_mb }}
        run: |
          set -euo pipefail
          DB_FREE_MB="${DB_FREE_MB:-500}"
          ST_FREE_MB="${ST_FREE_MB:-1024}"
          DAILY_EGRESS_MB_LIMIT="${DAILY_EGRESS_MB_LIMIT:-160}"

          PCT_DB=$(awk "BEGIN {if ($DB_FREE_MB==0) print 0; else printf \"%.1f\", ($DB/$DB_FREE_MB)*100}")
          PCT_ST=$(awk "BEGIN {if ($ST_FREE_MB==0) print 0; else printf \"%.1f\", ($ST/$ST_FREE_MB)*100}")

          # Access token
          ACCESS_TOKEN=$(curl -sS -X POST https://oauth2.googleapis.com/token \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "client_id=$GMAIL_CLIENT_ID&client_secret=$GMAIL_CLIENT_SECRET&refresh_token=$GMAIL_REFRESH_TOKEN&grant_type=refresh_token" \
            | jq -r '.access_token')

          # Subject/body
          NOW_MMT=$(date -u -d "+6 hours 30 minutes" "+%Y-%m-%d %H:%M MMT")
          SUBJECT="[DAILY] Supabase usage summary"
          BODY=$(cat <<EOF
          Supabase daily usage (${NOW_MMT})

          DB: ${DB} MB / ${DB_FREE_MB} MB  (${PCT_DB}%)
          Storage: ${ST} MB / ${ST_FREE_MB} MB  (${PCT_ST}%)
          Egress today: ${EGRESS_MB:-N/A} MB  (limit ~${DAILY_EGRESS_MB_LIMIT} MB/day)
          EOF
          )

          # MIME â†’ base64url
          {
            echo "From: ${GMAIL_FROM}"
            echo "To: ${GMAIL_TO}"
            echo "Subject: ${SUBJECT}"
            echo "Content-Type: text/plain; charset=UTF-8"
            echo
            printf "%s" "$BODY"
          } > mail.txt
          RAW=$(base64 -w0 mail.txt | tr '+/' '-_' | tr -d '=')

          # Send
          payload=$(jq -n --arg raw "$RAW" '{raw:$raw}')
          curl -sS -X POST "https://gmail.googleapis.com/gmail/v1/users/me/messages/send" \
            -H "Authorization: Bearer $ACCESS_TOKEN" -H "Content-Type: application/json" \
            -d "$payload" >/dev/null

          echo "Digest email sent."
